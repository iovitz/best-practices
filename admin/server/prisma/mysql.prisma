generator client {
  provider = "prisma-client-js"
  // 初始化：pnpm generate:mysql
  // 引入：import { PrismaClient } from '@prisma/client-mysql';
  output   = "../node_modules/@prisma/client-mysql"
}

datasource db {
  provider = "mysql"
  url      = env("DB_MYSQL_URL")
}

model User {
  index          Int              @id @default(autoincrement())
  id             String           @unique @db.VarChar(10)
  email          String           @unique @db.VarChar(30)
  password       String           @db.VarChar(32)
  status         Boolean?         @default(false) @db.UnsignedTinyInt
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Session        Session[]
  UserRole       UserRole[]
  UserPermission UserPermission[]
  UserProfile    UserProfile?
}

model UserProfile {
  index     Int      @id @default(autoincrement())
  id        String   @unique
  email     String   @unique @db.VarChar(30)
  username  String   @db.VarChar(10)
  desc      String?  @db.VarChar(50)
  avatar    String?  @db.VarChar(100)
  status    Boolean? @default(false) @db.UnsignedTinyInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [id], references: [id])
}

model Session {
  index          Int      @id @default(autoincrement())
  id             String   @unique @db.VarChar(30)
  userId         String
  browser        String?  @db.VarChar(20)
  browserVersion String?  @db.VarChar(20)
  os             String?  @db.VarChar(20)
  osVersion      String?  @db.VarChar(20)
  engine         String?  @db.VarChar(20)
  deviceVendor   String?  @db.VarChar(20)
  deviceModel    String?  @db.VarChar(20)
  useragent      String?  @db.VarChar(200)
  status         Boolean? @default(false) @db.UnsignedTinyInt
  expiredAt      DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id])
}

model Menu {
  id        Int      @id @default(autoincrement()) @db.UnsignedMediumInt
  pid       Int      @default(0)
  path      String   @db.VarChar(100)
  icon      String?  @db.VarChar(20)
  rank      Int?     @db.UnsignedInt
  name      String?  @db.VarChar(50)
  title     String   @db.VarChar(30)
  roles     String?  @db.VarChar(200)
  auth      String?
  status    Boolean? @default(false) @db.UnsignedTinyInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  index     Int        @id @default(autoincrement())
  name      String     @db.VarChar(50)
  status    Boolean?   @default(false) @db.UnsignedTinyInt
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  UserRole  UserRole[]
}

model Permission {
  index          Int              @id @default(autoincrement())
  name           String           @db.VarChar(50)
  status         Boolean?         @default(false) @db.UnsignedTinyInt
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  UserPermission UserPermission[]
}

model UserRole {
  index     Int    @id @default(autoincrement())
  rule      Role   @relation(fields: [roleIndex], references: [index])
  user      User   @relation(fields: [userId], references: [id])
  roleIndex Int
  userId    String
}

model UserPermission {
  index           Int        @id @default(autoincrement())
  user            User       @relation(fields: [userId], references: [id])
  permission      Permission @relation(fields: [permissionIndex], references: [index])
  userId          String
  permissionIndex Int
}
